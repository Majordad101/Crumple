{"license":"","file_hash":null,"name":"Crumple","version":"2021.3.31","description":"Nodes built by Gavin Crump (Aussie/BIM Guru) for Dynamo 2.3 and Revit 2020. Not tested in other builds, results may vary.","group":"","keywords":null,"dependencies":[],"contents":"© AreaLinesByCurves - Given a list of Dynamo curves, the node generates area boundary lines along them in the given view. For convenience of iterability, this node flattens the curve list by default., © AreasByRooms - Given a list of rooms, the node will create areas in the same position for an area plan view. The areas will have their name and number set to match their respective room., © BIPGbyName - Given a string or list of strings, return the corresponding BuiltIn Parameter Group., © BIPGs - Returns all BuiltIn Parameter Groups by group and type., © CADImports - Returns all CAD import instances as well as their type and view., © CADLinks - Return all CAD linked instances as well as their types and owner views., © CipherFrom - Converts numbers (or numbers as strings) from 'CipherTo' or from an alternative means back to lower case strings, including spaces., © CipherTo - Encodes strings to a numerical format for encoding or processing their values as numbers. The node can handle upper/lower case and also converts spaces to 0/00. You can proceed with numbers or strings, but numbers will not support padding to 2 digits for later processing back to strings., © ClosestLevel - For a list of points, returns the nearest level as well as the pulled point at the plane of the level. If you force the values to be below, it is recommended to apply some tolerance when you are analyzing elements at or just below the level you want them to be associated to., © ClosestNumber - For each number, find the nearest number in another list. Values are able to be forced down., © CreateSpaceTypes - Given a list of names, attempt to create new Space Types. If the name exists already, the Type will be skipped.\r\n\r\n'run_me' must be set to true., © - About the package., © CurtainGridCount - Returns the horizontal and vertical grid counts for curtain walls. Note that sometimes the parameter does not match the model for spacing based rules!, © DateTimeFormatted - A typical date time format for the current time, as well as date prefix and time suffix fields. These are typically useful for appending to file names generated via Dynamo., © Denominate - Given a list of numbers and a denominator, return the remainder of the numbers when divided by it. If the number is less than the demoninator, it will return the same number. This can be useful for identifying parallel vectors facing different directions by their angle about axis., © DesignOptions - Returns all design options in the model., © DesignOptionsBySet - Returns all design options broken down by primary and secondary, as well as their related option set., © DesignOptionSet - For a given design option, return its related set., © Desaturate - Converts RGB colours to their average aggregate brightness (R+G+B / 3) and retains their alpha value., © ElementById - Given an Element Id as an integer, returns the corresponding element in Revit., © ElementByUniqueId - Given a Unique Id as a string, returns the corresponding element in Revit., © ElementCentroid - Returns the centroid of the element's axis-aligned bounding box., © ElementHandFlipped - Returns true if an element has been hand flipped. If the element has been face flipped also, it will return false (as the element is technically not hand flipped in this case)., © ElementsCluster - Given a list of elements, determine how they should be grouped based on a proximity radius. The node will collect the centroid of each element (ignoring the Z coordinate) and cluster them based on whether their radii intersect with one another., © ElementsQuarantine - Given a list of element lists, exclude elements that wont comply with a given separation from one another. The node will return (one of) the most best possible outcomes for that group of elements., © ElementWorksets - Given a list of elements, return their associated workset, its name and a unique list of workset names belonging to that list of elements., © FamilyParameters - Obtains all parameters in the document, as well as their properties., © Fibonnaci - Returns the input number of Fibonnaci numbers., © FillPatterns - Returns all fill patterns in the active document., © FilterSolids - From a list or lists of geometry, filter out anything that doesn't fall under the object type solid. This is useful for dealing with families that contain geometry like curves from model lines., © GetSpaceType - Gets a Space's Type as well as it's name and Id., © IfThenElse - A simple if/then/else logic gate. If true, you get the 'then' input, otherwise you get the 'else' input. Unlike the OOTB 'If' node, this one allows differing list sizes., © Images - Returns all image instances in the model as well as their names, types and owner views., © LevelByElevationAndName - Given elevations and names, create levels with those properties., © LinePatterns - Returns all line patterns in the current document., © LinkedElementsByCategory - Returns all elements of any number of categories in a single Revit Model link instance., © ListForce - A basic node to check if the input is in the form of a list, and if not it forces it to become one. This simple python script is useful for incorporation into larger scripts for iterating., © ListKickFlip - Drops a certain number of rows from the front a list, then transposes it. Handy for pre-processing Excel data!, © ListPositize - From a list of numbers, replace all negative values with a substitute value. Useful for processing those pesky -1 indices!, © ListSplitAtIndex - Splits a list at a specific index, then returns the two lists. You may need to use levels in order for this to work properly., © ListSplitAtValue - Given a list (or list of lists), split the lists into sublists wherever a specified value occurs. Typically used for processing lists of booleans or 1's and 0's in Ladybug sun hour results to isolate continuous periods., © ListStringOccurences - Given a list of strings, returns the number of times each string appears in that list., © MaterialsByPrefix - Returns all materials in the current document, sorted by whether they contain a specified prefix., © OldIf - Retains the functionality of the old if node (no Python used). All credit to the Zebra package - hadn't been updated since 2016 so decided to give it a new home., © OverrideAlpha - Overrides the alpha value (transparency) of all colours fed into the node. The transparency value should be between 0 and 255., © ParameterReplaceFamily - Given some family parameters in a document, replace them with new shared parameters with the chosen external definitions., © ParameterReplaceShared - Given some shared parameters in a family document, replaces them with new family parameters with the chosen names., © PointsToRevitCoordinates - This node translates points in Dynamo coordinates to their respective Revit project coordinate., © PolyCurveGreatestArea - From a list of polycurves, return the one with the largest area only. Can be useful for determining the outer-most boundary in a room with internalised holes., © PopulateElement - Distributes points randomly amongst the bounding box of an element., © PopulateSurface - Distributes a certain number of points randomly across an input surface., © ProjectBasePoint - This node will return the Revit project base point as well as the NS, EW and elevation values., © ProjectInformation - Retrieve project information field(s) by name., © ProjectOrigin - This node will return the Revit project origin as well as the NS, EW and elevation values., © RandomNumbers - Generates a list of random numbers between a minimum and maximum value., © RegexSimple - Based on a single regex statement, check all strings against it., © ReplaceNulls - Replaces all nulls with a given substitute., © RoomBoundaries - For a room or list of rooms, return all boundary (and internal) curves. The curves will be based on the currently nominated project room boundary settings., © RoomsByPlacement - Collects all placed/unplaced rooms as two lists., © RoundToString - Given a list of numbers with decimal places, round them to a specific length and convert that to a string. More reliable than String.ToObject., © SharedParameterDefinitions - Returns the currently available shared parameters, their groups and the external definitions for both., © SharedParametersPath - Returns the path to the currently active shared parameters file., © SheetByNumber - Given a sheet number, return the matching sheet. If no match is found, a message is returned. The node also returns a matches list and a list of indices for non-matches., © SheetsCreate - Creates Revit sheets based on a list of names, numbers and a single Titleblock type., © SpaceSchedules - Gets all occupancy, power and lighting schedules currently applied to any Space Types in the model. Also returns their name and Id., © SpaceTypes - Collects all space types as well as their names from the current document., © StringDeCamelize - Splits one or multiple strings into sublists, broken down at each upper case character., © StringExplode - Deconstructs a string (or list of strings) into their characters. There is the option to replace spaces with a special character which can be helpful for delimiting or visual ergonomics., © StringFromObject_PY - Uses the python str() function to convert data types to strings. Unlike 'string from object' this will trim trailing 0's from numbers., © StringJoin+ - Joins a list of strings together, inserting a separating character between each of them. Input must be a list containing a list or lists., © SumCumulative - Continuously adds a list of numbers together, returning a list of the values in sequence., © SurfaceClampZ - Given a lower and upper parameter between -1 and 1, return all surfaces with a normal Z value in that range., © SurveyPoint - This node will return the Revit survey point as well as the NS, EW and elevation values., © SwissSurface - Takes a collection of polycurves, finds the encapsulating curve and returns the outermost surface (with holes cut out). The result must be projected to a common plane., © TimerCheck - Will output a time taken once data has passed through this node, as well as the duration since a given datetime occured. Connect this up to a TimerStart or other TimerCheck nodes to measure the runtime of your scripts!, © TimerStart - Will output a time that is taken once data has passed through this node. Connect this time up to TimerCheck nodes to measure execution times., © UILogoPath - Returns the file path of your 'My Documents' folder, then the file 'logo.png'. If you store your logo here you can call on it reliably for Data Shapes interfaces., © UIMessenger - Displays a message box with a title/body and OK/cancel button. If OK is selected, the third input's data will be passed through., © UIPather - When runMe is set to true, this node will display a file path dialogue for the user to interact with. The script will remain paused until the input is provided a value., © UserDesktop - This node returns the active username, as well as a path to the user's Desktop., © UserDocuments - This node returns the active username, as well as a path to the user's My Documents., © UserNames - This node returns the users Windows and Revit user names., © UserPath - This node return's the active username, as well as a path to their user folder., © UserPaths - This node returns the active username, as well as common user paths including:\r\n- Desktop\r\n- My Documents\r\n- Temp\r\n- Dynamo Revit (for active build)\r\n- Dynamo Revit logs (\" \"), © UserTemp - This node returns the active username, as well as a path to the user's Temp files., © VectorFromString - Given a string form of a vector (X = x.xxx, Y = x.xxx, Z = x.xxx), return the equivalent vector. Note that if the original vector was more precise than 3 significant figures, it will be now only accurate to this many., © VectorGroupByDirection - Given a list of vectors (and a list of data), return the data and vectors grouped by their direction., © VectorGroupByParallel - Given a list of vectors (and a list of data) return the data and vectors grouped by their parallelism., © ViewCropBox - Returns the curves of a view's cropbox (even if not visible/active). Also returns whether the cropbox is currently visible and active as booleans., © ViewLevel - Returns the associated level of a view (if it has one), as well as a boolean mask to remove views without levels after., © ViewOpen - Opens a Revit view (can also be a sheet)., © ViewportRelatives - For a viewport, returns the related view and sheet., © ViewsAndNames - Returns all views and view templates in the model, as well as their names., © ViewsCleaned - Returns the views/legends contained within the current document. Legends are broken out into their own sub-list., © ViewSetSunSettings - Given a list of views, apply a datetime and shadow intensity setting to their sun settings (still). You will need to update the shadows on/off setting manually or via a view template., © ViewsToSheets_ByPoint - Moves views to sheets based on viewport centres. The node expects 1 point only, and will source this for all view placement., © ViewsToSheets_ByPoints - Moves views to sheets based on viewport centres. The node expects the same number of points as views/sheets to be provided., © WaitFor - Tells the first input to wait for the second input to arrive, then passes on the first input. Really useful for scripts which have branching paths that rely on their outputs to carry each other forward.\r\n\r\nQuite a few custom packages have a 'passthrough' or 'waitfor' node. I use these all the time, so find it useful to have them contained in this package also., © Worksets - Returns all user worksets and their names in the current document.","engine_version":"2.3.0.8352","engine":"dynamo","engine_metadata":"","site_url":"www.youtube.com/aussiebimguru","repository_url":"","contains_binaries":true,"node_libraries":["Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null","Package.customization, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null"]}