{
  "Uuid": "5aeec4a8-175a-40e0-9d9e-31c0695797da",
  "IsCustomNode": true,
  "Category": "Crumple.Application.Excel",
  "Description": "Borrows Bumblebee code in order to import Excel data even if the windows repair issue is present which often prevents the default methods from working in Dynamo for Excel Import.",
  "Name": "Â© CrumblebeeImport",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Provided by Gavin Crump\r\n# Free for use\r\n# BIM Guru, www.bimguru.com.au\r\n\r\n# Code borrowed and adjusted from Bumblebee\r\n# Free for use under lisence on github\r\n# https://github.com/ksobon/Bumblebee\r\n\r\n# Boilerplate text\r\nimport clr\r\nimport System\r\n\r\n# import excel for reading\r\nclr.AddReference(\"Microsoft.Office.Interop.Excel\")\r\nfrom Microsoft.Office.Interop import Excel\r\nSystem.Threading.Thread.CurrentThread.CurrentCulture = System.Globalization.CultureInfo(\"en-US\")\r\nfrom System.Runtime.InteropServices import Marshal\r\n\r\n# sets up Excel to run not in live mode\r\ndef SetUp(xlApp):\r\n\t# supress updates and warning pop ups\r\n\txlApp.Visible = False\r\n\txlApp.DisplayAlerts = False\r\n\txlApp.ScreenUpdating = False\r\n\treturn xlApp\r\n\r\n# read excel data of a worksheet\r\ndef ReadData(ws, origin, extent, byColumn):\r\n\r\n\trng = ws.Range[origin, extent].Value2\r\n\tif not byColumn:\r\n\t\tdataOut = [[] for i in range(rng.GetUpperBound(0))]\r\n\t\tfor i in range(rng.GetLowerBound(0)-1, rng.GetUpperBound(0), 1):\r\n\t\t\tfor j in range(rng.GetLowerBound(1)-1, rng.GetUpperBound(1), 1):\r\n\t\t\t\tdataOut[i].append(rng[i,j])\r\n\t\treturn dataOut\r\n\telse:\r\n\t\tdataOut = [[] for i in range(rng.GetUpperBound(1))]\r\n\t\tfor i in range(rng.GetLowerBound(1)-1, rng.GetUpperBound(1), 1):\r\n\t\t\tfor j in range(rng.GetLowerBound(0)-1, rng.GetUpperBound(0), 1):\r\n\t\t\t\tdataOut[i].append(rng[j,i])\r\n\t\treturn dataOut\r\n\r\n# exit excel once worksheet is read\r\ndef ExitExcel(xlApp, wb, ws):\r\n\t# clean up before exiting excel, if any COM object remains\r\n\t# unreleased then excel crashes on open following time\r\n\tdef CleanUp(_list):\r\n\t\tif isinstance(_list, list):\r\n\t\t\tfor i in _list:\r\n\t\t\t\tMarshal.ReleaseComObject(i)\r\n\t\telse:\r\n\t\t\tMarshal.ReleaseComObject(_list)\r\n\t\treturn None\r\n\t\t\r\n\txlApp.ActiveWorkbook.Close(False)\r\n\txlApp.ScreenUpdating = True\r\n\tCleanUp([ws,wb,xlApp])\r\n\treturn None\r\n\r\n# inputs\r\nfilePath = IN[0]\r\nsheetName = IN[1]\r\nbyColumn = IN[2]\r\nreport = []\r\n\r\n# try to get Excel data\r\ntry:\r\n\txlApp = SetUp(Excel.ApplicationClass())\r\n\txlApp.Workbooks.open(unicode(filePath))\r\n\twb = xlApp.ActiveWorkbook\r\n\tws = xlApp.Sheets(sheetName)\r\n\toriginGot = ws.Cells(ws.UsedRange.Row, ws.UsedRange.Column)\r\n\textentGot = ws.Cells(ws.UsedRange.Rows(ws.UsedRange.Rows.Count).Row, ws.UsedRange.Columns(ws.UsedRange.Columns.Count).Column)\r\n\tdataOut = ReadData(ws, originGot, extentGot, byColumn)\r\n\tExitExcel(xlApp, wb, ws)\r\n\treport = \"Data retrieved successfully.\"\r\nexcept:\r\n\tdataOut = None\r\n\treport = \"Data not retrieved successfully. Make sure sheet name is correct\"\r\n\r\n# return result\r\nOUT = [dataOut,report]",
      "VariableInputPorts": true,
      "Id": "279be8e09070447b8e1e98f36702df85",
      "Inputs": [
        {
          "Id": "1691fcfcdf0e4904b5355dc1bc4d2248",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25d0127fe87d4cbc90f87bb8d072f95d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82bd9e4f357d451189d1d35fdc803c01",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9100c3647974f71b8a63ad7d1adebe9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "filePath",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "ffdaa5be32974ed29995de59a8885e8a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dda9270a81da4583b3108f2edb74b019",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sheetName",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": "\"Sheet1\"",
        "Description": ""
      },
      "Id": "828daacd40dc4c32a1ea1dcb439c4da6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0caa9ef5824f464a8b95c490d85a0b33",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "headerRows",
      "Id": "51fe5b8a9e53455dadb2dd205202148e",
      "Inputs": [
        {
          "Id": "4b319500c1f741cb9a9cd9371b68b21a",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "dropRows",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "1",
        "Description": ""
      },
      "Id": "4dcdcd5a9ea347339f7db724d4a1fa68",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af4c298ee2f3482ba8981f331100a22b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "e1d54918088a422c871d6b9321b79b3e",
      "Inputs": [
        {
          "Id": "3c521d24a79b478bbe6989b65ec29e09",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9af31d0f04454481b8d412c53f0fbb2d",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb1968abee114ed488dda86039fd2f1a",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "44be18c803b74e5cb2d88d6461d1ec5a",
      "Inputs": [
        {
          "Id": "c6e9e3b688324b01b6fc4f68270a2850",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fcd1689823247a6aee04a2bce75e377",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36915f648a5d430ba16dce30bbd77075",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "data = out[0];\nrept = out[1];",
      "Id": "e85e6e43c5e7413da4ffb8a474cfa71d",
      "Inputs": [
        {
          "Id": "53942358d14b4551a8a9fb3e84b49413",
          "Name": "out",
          "Description": "out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efe7c68c00e14833942b47228f433c57",
          "Name": "",
          "Description": "data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60f91d84e5524863b843c57a501c0af6",
          "Name": "",
          "Description": "rept",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "0bca4c4378744da5abdec20fdd961920",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a39771cce0f444c7b4b684d43372de01",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "dataColumns",
      "Id": "2e952395c06f4e7bb2dd833acab9d801",
      "Inputs": [
        {
          "Id": "b57519a203184f08a327553e7cd87d07",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "report",
      "Id": "b114e7b76f554473be89bc4682d51e00",
      "Inputs": [
        {
          "Id": "f195400e1f1b49f4a42fcab244126c10",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a98371318e134a13b089275e97d0f4f8",
      "Inputs": [
        {
          "Id": "54ffda7a606e4308a8ec18944f9920a5",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6451562716234ec88e27dd874e0c3fba",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "e9100c3647974f71b8a63ad7d1adebe9",
      "End": "53942358d14b4551a8a9fb3e84b49413",
      "Id": "0bf54f7de81d45428173097cc59da860"
    },
    {
      "Start": "dda9270a81da4583b3108f2edb74b019",
      "End": "1691fcfcdf0e4904b5355dc1bc4d2248",
      "Id": "610f725f24564a729a8fe62d1799d113"
    },
    {
      "Start": "0caa9ef5824f464a8b95c490d85a0b33",
      "End": "25d0127fe87d4cbc90f87bb8d072f95d",
      "Id": "ba0d0e503c124e4ba33238eed6b54859"
    },
    {
      "Start": "af4c298ee2f3482ba8981f331100a22b",
      "End": "0fcd1689823247a6aee04a2bce75e377",
      "Id": "82d87e2ef1f744168b0d6e946eac8b55"
    },
    {
      "Start": "af4c298ee2f3482ba8981f331100a22b",
      "End": "9af31d0f04454481b8d412c53f0fbb2d",
      "Id": "a385a76192674616885e437904f92621"
    },
    {
      "Start": "bb1968abee114ed488dda86039fd2f1a",
      "End": "54ffda7a606e4308a8ec18944f9920a5",
      "Id": "49f8ce8195fa4000be4966f3a6923caa"
    },
    {
      "Start": "36915f648a5d430ba16dce30bbd77075",
      "End": "4b319500c1f741cb9a9cd9371b68b21a",
      "Id": "e74047875e0f42f1bd88b6a73bc02bb2"
    },
    {
      "Start": "efe7c68c00e14833942b47228f433c57",
      "End": "c6e9e3b688324b01b6fc4f68270a2850",
      "Id": "6fdc43fd4f864878a48f125e894e50aa"
    },
    {
      "Start": "efe7c68c00e14833942b47228f433c57",
      "End": "3c521d24a79b478bbe6989b65ec29e09",
      "Id": "4d40a7e108d549ba89bc432610c3ceac"
    },
    {
      "Start": "60f91d84e5524863b843c57a501c0af6",
      "End": "f195400e1f1b49f4a42fcab244126c10",
      "Id": "fc6d96dea9a741c9b24b0d3ea174f655"
    },
    {
      "Start": "a39771cce0f444c7b4b684d43372de01",
      "End": "82bd9e4f357d451189d1d35fdc803c01",
      "Id": "c72d4558e4044eb79292721e20949cd8"
    },
    {
      "Start": "6451562716234ec88e27dd874e0c3fba",
      "End": "b57519a203184f08a327553e7cd87d07",
      "Id": "21aa55ea8f82415399548909b955f11f"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.1.11775",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "279be8e09070447b8e1e98f36702df85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 244.0,
        "Y": 2.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "ffdaa5be32974ed29995de59a8885e8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -70.200231110668483,
        "Y": -39.666281482219119
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "828daacd40dc4c32a1ea1dcb439c4da6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -145.47182813826396,
        "Y": 27.933256296443858
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "51fe5b8a9e53455dadb2dd205202148e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1109.0,
        "Y": -194.0
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "4dcdcd5a9ea347339f7db724d4a1fa68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -50.0,
        "Y": -135.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.DropItems",
        "Id": "e1d54918088a422c871d6b9321b79b3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 774.0,
        "Y": -82.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.TakeItems",
        "Id": "44be18c803b74e5cb2d88d6461d1ec5a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 775.0,
        "Y": -193.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e85e6e43c5e7413da4ffb8a474cfa71d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 400.0,
        "Y": 7.0
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0bca4c4378744da5abdec20fdd961920",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 39.0,
        "Y": 96.0
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "2e952395c06f4e7bb2dd833acab9d801",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1228.8575262019815,
        "Y": -81.392621366562167
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "b114e7b76f554473be89bc4682d51e00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1125.0,
        "Y": 15.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "a98371318e134a13b089275e97d0f4f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1032.0303902712305,
        "Y": -81.62526285193826
      }
    ],
    "Annotations": [],
    "X": 351.21471318089255,
    "Y": 273.65361084639972,
    "Zoom": 0.93743229668600092
  }
}